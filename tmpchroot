#!/bin/bash

device=/dev/sda6
maint=/mnt/btrfs/maint
envdir=/mnt/btrfs/chroot

updateVariables() {
    newROOTname=ROOT-chroot-$envname
    newHOMEname=HOME-chroot-$envname
    newROOT=$envdir/$envname
}

bindmounts=(/var/portage/distfiles/ /var/portage/packages/ \
    /var/tmp/ccache /var/tmp/portage /var/tmp/portage_notmpfs/)

mountbinds() {
    for i in ${bindmounts[@]}; do
        mount --bind "$i" "$newROOT/$i"
    done
}

umountbinds() {
    for i in $(seq $((${#bindmounts[@]} - 1)) -1 0); do
        umount "$newROOT/${bindmounts[$i]}"
    done
}

createSnapshots() {
    mount $maint
    btrfs sub snap $maint/ROOT $maint/$newROOTname
    btrfs sub snap $maint/HOME $maint/$newHOMEname
    umount $maint

    mkdir -p $newROOT
}

buildUp() {
    mount -o subvol=$newROOTname $device $newROOT
    mount -o subvol=$newHOMEname $device $newROOT/home

    mountbinds
}

showTime() {
    systemd-nspawn --link-journal=no -D $newROOT "$@"
    deblock
}

deblock() {
    perl -e "use Fcntl qw(F_GETFL F_SETFL O_NONBLOCK); \
        fcntl(STDIN, F_SETFL, fcntl(STDIN, F_GETFL, 0) & ~O_NONBLOCK);"
}

tearDown() {
    if grep -q "$newROOT" /etc/mtab; then
        umountbinds
        umount $newROOT/home $newROOT
    fi
}

removeSnapshots() {
    if [ "$_yes" = "42" ]; then
        remove="yes"
    else
        read -p "Remove Environment \"$envname\"? " remove
    fi

    if [ "$remove" != "yes" ]; then
        echo "Environment \"$envname\" will NOT be deleted."
    else
        rmdir $newROOT

        mount $maint
        btrfs sub del $maint/$newROOTname $maint/$newHOMEname
        umount $maint
    fi
}

# --- Main Routine ---

# Process arguments

args=( "$@" )
for i in $(seq 0 $((${#args} - 1))); do
    case ${args[$i]} in
        "")
            ;;
        list | test)
            action="${args[$i]}"
            unset args[$i]
            ;;
        create | continue)
            action="${args[$i]}"
            envname="${args[$(($i + 1))]}"
            unset args[$i] args[$(($i + 1))]
            ;;
        delete)
            action="${args[$i]}"
            unset args[$i]
            break
            ;;
        -y)
            _yes=42
            unset args[$i]
            ;;
        --)
            unset args[$i]
            break
            ;;
        *)
            echo "Unknown argument \"${args[$i]}\"!"
            exit 1
            ;;
    esac
done

case "$action" in
    "")
        envname=$(date +%s%N)
        updateVariables
        createSnapshots
        buildUp
        showTime "${args[@]}"
        tearDown
        removeSnapshots
        ;;
    list)
        if [[ -d "$envdir" && -n $(ls $envdir) ]]; then
            ls -1 $envdir
        else
            echo "No environments found."
        fi
        ;;
    create)
        if [ -z "$envname" ]; then
            echo "Please name an environment!"
        else
            updateVariables
            if [ -d "$newROOT" ]; then
                echo "There already is an environment \"$envname\"!"
            else
                createSnapshots
                buildUp
                showTime "${args[@]}"
                tearDown
                removeSnapshots
            fi
        fi
        ;;
    continue)
        if [ -z "$envname" ]; then
            echo "Please name an environment!"
        else
            updateVariables
            if [ ! -d "$newROOT" ]; then
                echo "There is no environment \"$envname\"!"
            else
                buildUp
                showTime "${args[@]}"
                tearDown
                removeSnapshots
            fi
        fi
        ;;
    delete)
        if [ -z "${args[*]}" ]; then
            echo "Please name an environment!"
        else
            for i in "${args[@]}"; do
                envname="$i"
                updateVariables
                if [ ! -d "$newROOT" ]; then
                    echo "There is no environment \"$i\"!"
                else
                    tearDown
                    removeSnapshots
                fi
            done
        fi
        ;;
    test)
        envname=$(date +%s%N)
        updateVariables
        createSnapshots
        buildUp
        ;;
esac
